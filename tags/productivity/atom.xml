<?xml version="1.0" encoding="UTF-8"?>
<feed xmlns="http://www.w3.org/2005/Atom" xml:lang="en">
    <title>Noos - Where Thought, Code, and Craft Converge - productivity</title>
    <subtitle>Personal blog about programming, technology, and engineering insights. Topics include Rust, DevOps, Linux, and software craftsmanship.</subtitle>
    <link rel="self" type="application/atom+xml" href="https://noos.blog/tags/productivity/atom.xml"/>
    <link rel="alternate" type="text/html" href="https://noos.blog"/>
    <generator uri="https://www.getzola.org/">Zola</generator>
    <updated>2025-10-22T00:00:00+00:00</updated>
    <id>https://noos.blog/tags/productivity/atom.xml</id>
    <entry xml:lang="en">
        <title>How Embracing Rust Sharpens the Mind — and Elevates Teams</title>
        <published>2025-10-22T00:00:00+00:00</published>
        <updated>2025-10-22T00:00:00+00:00</updated>
        
        <author>
          <name>
            
              Unknown
            
          </name>
        </author>
        
        <link rel="alternate" type="text/html" href="https://noos.blog/posts/how-embracing-rust-sharpens-the-mind/"/>
        <id>https://noos.blog/posts/how-embracing-rust-sharpens-the-mind/</id>
        
        <content type="html" xml:base="https://noos.blog/posts/how-embracing-rust-sharpens-the-mind/">&lt;p&gt;When you decide to work in Rust, something subtle begins to shift. It’s not just about learning a new syntax or mastering memory safety. It’s about engaging a mode of thinking that demands attention, clarity, and responsibility. In doing so, you develop stronger focus, sharpened critical thinking, and what might best be called responsible individualism. And when one person grows in that way, the ripple effects can touch an entire team or organization.&lt;&#x2F;p&gt;
&lt;p&gt;In this post, I’ll explore three interlocking themes:&lt;&#x2F;p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;strong&gt;Focus&lt;&#x2F;strong&gt; — how Rust trains sustained, precise attention&lt;&#x2F;li&gt;
&lt;li&gt;&lt;strong&gt;Critical Thinking&lt;&#x2F;strong&gt; — how Rust forces richer reasoning and choice&lt;&#x2F;li&gt;
&lt;li&gt;&lt;strong&gt;Individualism &amp;amp; Contribution&lt;&#x2F;strong&gt; — how mastering Rust empowers an individual who then strengthens the whole&lt;&#x2F;li&gt;
&lt;&#x2F;ol&gt;
&lt;hr &#x2F;&gt;
&lt;h2 id=&quot;1-focus-cultivating-attention-in-the-code&quot;&gt;1. Focus: Cultivating Attention in the Code&lt;&#x2F;h2&gt;
&lt;p&gt;In many languages, you type, you compile, you run. Mistakes show up in logs or in production. With Rust, the compiler intervenes early and often. You’ll catch ownership issues, borrowing conflicts, lifetime mismatches—not after deployment, but at compile time.&lt;&#x2F;p&gt;
&lt;p&gt;Consider these moments:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;You borrow a value; you pause and ask: Who currently has access?&lt;&#x2F;li&gt;
&lt;li&gt;You annotate a function; you reflect: What lifetimes are involved, and why must this reference stay valid here?&lt;&#x2F;li&gt;
&lt;li&gt;You handle a &lt;code&gt;Result&amp;lt;T, E&amp;gt;&lt;&#x2F;code&gt;; you evaluate: What happens when this fails?&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;These are micro‑acts of attention. Over time, they build a habit of precision and presence. Rust trains you not to write just-sufficient code—but code you understand and own.&lt;&#x2F;p&gt;
&lt;p&gt;When a developer learns this mode of working, the whole team benefits. Code reviews become richer. Discussions shift from “does it compile?” to “why did this compile, and is this the best way?” The developer’s focus becomes a team asset.&lt;&#x2F;p&gt;
&lt;hr &#x2F;&gt;
&lt;h2 id=&quot;2-critical-thinking-building-sound-reasoning&quot;&gt;2. Critical Thinking: Building Sound Reasoning&lt;&#x2F;h2&gt;
&lt;p&gt;Beyond focus, Rust forces you into deeper reasoning. Ownership, borrowing, lifetimes, concurrency—they’re not mere mechanics, they’re invitations to think about how your code works, why it is safe, and what assumptions you’re making.&lt;&#x2F;p&gt;
&lt;p&gt;In philosophical terms, this resembles the concept of technē—the idea of craft or making, where knowing how to do something is inseparable from knowing why you do it. In programming, Rust becomes a modern technē: you not only write code, you reason about resources, validity, and correctness.&lt;&#x2F;p&gt;
&lt;p&gt;For example:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;You ask: “If I pass this borrow here, could someone else modify the data concurrently?”&lt;&#x2F;li&gt;
&lt;li&gt;You reason: “If this value moves and the original is used afterward, I invite a compile error. Why does Rust forbid this? What risk is it preventing?”&lt;&#x2F;li&gt;
&lt;li&gt;You model: “When threads share &lt;code&gt;Arc&amp;lt;Mutex&amp;lt;T&amp;gt;&amp;gt;&lt;&#x2F;code&gt;, what invariants do I preserve? What could go wrong if I slip up?”&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;These questions steer you away from simple feature‑delivery and toward thoughtful system design. And when more developers engage in this kind of thinking, the codebase becomes more robust, maintainable, and predictable.&lt;&#x2F;p&gt;
&lt;hr &#x2F;&gt;
&lt;h2 id=&quot;3-individualism-contribution-mastery-that-scales&quot;&gt;3. Individualism &amp;amp; Contribution: Mastery That Scales&lt;&#x2F;h2&gt;
&lt;p&gt;“Individualism” often carries negative connotations—but here I mean a positive kind: an individual taking responsibility for their craft, developing depth of understanding, and then choosing to bring that to the group. Rust supports exactly that.&lt;&#x2F;p&gt;
&lt;p&gt;The philosophy of software craftsmanship frames development as more than meeting a deadline—it’s about mastery, continuous improvement, and professional pride. When someone invests the time to master Rust’s rule set, they gain both confidence and clarity. They can mentor others, raise standards, and uplift the team.&lt;&#x2F;p&gt;
&lt;p&gt;In turn, the team and organization benefit:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;Decreased bugs and runtime surprises&lt;&#x2F;li&gt;
&lt;li&gt;Clearer design boundaries and documentation&lt;&#x2F;li&gt;
&lt;li&gt;A culture where thinking matters and craftsmanship is respected&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;In this way, the individual’s growth becomes a catalyst for collective growth. One Rust‑savvy engineer can shift a team’s mindset from “just ship” to “ship well.”&lt;&#x2F;p&gt;
&lt;hr &#x2F;&gt;
&lt;h2 id=&quot;philosophical-reflection-craft-virtue-and-the-common-good&quot;&gt;Philosophical Reflection: Craft, Virtue, and the Common Good&lt;&#x2F;h2&gt;
&lt;p&gt;Let’s step into the philosophical background. In the virtue‑ethics tradition, the focus isn’t only on what you do, but who you become by doing it. When you practise a craft with discipline, you internalize values: care, integrity, attention to detail.&lt;&#x2F;p&gt;
&lt;p&gt;Rust—as a programming language—is more than a tool; it’s a training ground. The rules around ownership and safety aren’t arbitrary; they coax you into a mindset of accountability. That mindset echoes technē: making with purpose, not just automatism.&lt;&#x2F;p&gt;
&lt;p&gt;At the same time, contributing to a team, a codebase, or an open ecosystem aligns with the idea of the common good. Technology can be shaped for more than profit—it can serve that which is good, beautiful, and durable.&lt;&#x2F;p&gt;
&lt;p&gt;Putting those threads together: writing Rust becomes a practice in character as much as a skill in code. You become someone who thinks deeply about structure, consequences, and shared responsibility. And that transformation benefits every person you code with.&lt;&#x2F;p&gt;
&lt;hr &#x2F;&gt;
&lt;h2 id=&quot;conclusion&quot;&gt;Conclusion&lt;&#x2F;h2&gt;
&lt;p&gt;Working with Rust gives you more than faster performance or fewer runtime bugs. It gives you a path to sharpen your focus, refine your thinking, and develop a personal mastery that contributes to something larger than yourself.&lt;br &#x2F;&gt;
If you’re a developer seeking to grow not just your output but your way of working, Rust offers a compelling challenge.&lt;br &#x2F;&gt;
If you’re a leader or a team building culture, supporting your engineers in learning Rust can become a signal of valuing craft, clarity, and long‑term thinking.&lt;&#x2F;p&gt;
&lt;p&gt;In the end, the code we build reflects the minds we train. With Rust, the training is real—and the benefits run deep.&lt;&#x2F;p&gt;
&lt;hr &#x2F;&gt;
&lt;h3 id=&quot;further-reading&quot;&gt;Further Reading&lt;&#x2F;h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;en.wikipedia.org&#x2F;wiki&#x2F;Software_craftsmanship&quot;&gt;Software Craftsmanship&lt;&#x2F;a&gt; – the movement emphasizing craftsmanship in programming.&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;en.wikipedia.org&#x2F;wiki&#x2F;Techne&quot;&gt;Techne&lt;&#x2F;a&gt; – the Greek philosophical concept of craft and skill.&lt;&#x2F;li&gt;
&lt;li&gt;Jonsson, M.; Tholander, C. &lt;a href=&quot;https:&#x2F;&#x2F;www.diva-portal.org&#x2F;smash&#x2F;get&#x2F;diva2%3A1902016&#x2F;FULLTEXT02.pdf&quot;&gt;&lt;em&gt;Aiming for Virtue in Programming with Generative AI&lt;&#x2F;em&gt;&lt;&#x2F;a&gt; (2023) – On craft, judgement and programming.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
</content>
        
    </entry>
    <entry xml:lang="en">
        <title>How my terminal looks</title>
        <published>2025-10-13T00:00:00+00:00</published>
        <updated>2025-10-13T00:00:00+00:00</updated>
        
        <author>
          <name>
            
              Unknown
            
          </name>
        </author>
        
        <link rel="alternate" type="text/html" href="https://noos.blog/posts/how-my-terminal-looks/"/>
        <id>https://noos.blog/posts/how-my-terminal-looks/</id>
        
        <content type="html" xml:base="https://noos.blog/posts/how-my-terminal-looks/">&lt;h3 id=&quot;background&quot;&gt;Background&lt;&#x2F;h3&gt;
&lt;p&gt;I think everyone of you geeks would like if your terminal looks cool and productive. And yes, I&#x27;m talking here about terminals in POSIX-compliant OS&#x27;s, more specifically terminal in a Linux environment.&lt;&#x2F;p&gt;
&lt;p&gt;Anyhow I will share you the details of my customized terminal configurations so you could get an idea of what it is really capable of doing and perhaps you would start applying the changes to your own terminal.&lt;&#x2F;p&gt;
&lt;p&gt;So to make it all happen I had to give up on &lt;code&gt;bash&lt;&#x2F;code&gt; and start using &lt;code&gt;zsh&lt;&#x2F;code&gt;. Because &lt;code&gt;zsh&lt;&#x2F;code&gt; provides some extensive support to terminal users and it is certainly feature rich, customizable  and cooler than &lt;code&gt;bash&lt;&#x2F;code&gt;. So all the customizations I made are based on &lt;code&gt;zsh&lt;&#x2F;code&gt; and &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;robbyrussell&#x2F;oh-my-zsh&quot;&gt;oh-my-zsh&lt;&#x2F;a&gt; (a really cool community driven project for managing &lt;code&gt;zsh&lt;&#x2F;code&gt; configurations)&lt;&#x2F;p&gt;
&lt;h3 id=&quot;looks&quot;&gt;Looks&lt;&#x2F;h3&gt;
&lt;p&gt;If looking at theming &lt;code&gt;oh-my-zsh&lt;&#x2F;code&gt; provides some cool and nice looking themes out of the box. But the theme that I&#x27;m using is an external theme and needs little bit more configurations before using it.&lt;&#x2F;p&gt;
&lt;p&gt;It&#x27;s call &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;caiogondim&#x2F;bullet-train-oh-my-zsh-theme&quot;&gt;bullet-train&lt;&#x2F;a&gt; and to make it look right I had to install some fonts from &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;powerline&#x2F;fonts&quot;&gt;Vim-Powerline&lt;&#x2F;a&gt;. I also had to change the color scheme of my terminal to use &lt;strong&gt;Solarized (dark)&lt;&#x2F;strong&gt;. Here I&#x27;m using xfce4-terminal that comes with Xubuntu, so I can easily change the color scheme from the preferences menu. I also make it a bit transparent to make it even more cooler.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;productivity&quot;&gt;Productivity&lt;&#x2F;h3&gt;
&lt;p&gt;Enough of the looks. Lets see how is it when it comes the productivity. Here again &lt;code&gt;oh-my-zsh&lt;&#x2F;code&gt; provides some nice &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;robbyrussell&#x2F;oh-my-zsh&#x2F;tree&#x2F;master&#x2F;plugins&quot;&gt;plugins&lt;&#x2F;a&gt; that you can use to increase your productivity. I&#x27;ll list down the plugins that I&#x27;m using&lt;&#x2F;p&gt;
&lt;h4 id=&quot;plugins&quot;&gt;Plugins&lt;&#x2F;h4&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;robbyrussell&#x2F;oh-my-zsh&#x2F;wiki&#x2F;Plugin:git&quot;&gt;git&lt;&#x2F;a&gt; - A very comprehensive plugin for &lt;code&gt;git&lt;&#x2F;code&gt; with lots of aliases for easy usage&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;robbyrussell&#x2F;oh-my-zsh&#x2F;tree&#x2F;master&#x2F;plugins&#x2F;history-substring-search&quot;&gt;history-substring-search&lt;&#x2F;a&gt; - Very useful plugin that will get you through your &lt;code&gt;zsh&lt;&#x2F;code&gt; history backwards-forwards via up and down arrow keys&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;zsh-users&#x2F;zsh-syntax-highlighting&quot;&gt;zsh-syntax-highlighting&lt;&#x2F;a&gt; - this will highlight the commands we use inside the terminal&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;robbyrussell&#x2F;oh-my-zsh&#x2F;tree&#x2F;master&#x2F;plugins&#x2F;command-not-found&quot;&gt;command-not-found&lt;&#x2F;a&gt; - will suggest alternative&#x2F;correct commands instead of just command not found error&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;robbyrussell&#x2F;oh-my-zsh&#x2F;tree&#x2F;master&#x2F;plugins&#x2F;colorize&quot;&gt;colorize&lt;&#x2F;a&gt; - this will colorize the syntaxes for almost every popular sciprting&#x2F;programing language&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;robbyrussell&#x2F;oh-my-zsh&#x2F;tree&#x2F;master&#x2F;plugins&#x2F;colored-man-pages&quot;&gt;colored-man-pages&lt;&#x2F;a&gt; - syntax highlight in man pages for easy reading&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;robbyrussell&#x2F;oh-my-zsh&#x2F;tree&#x2F;master&#x2F;plugins&#x2F;python&quot;&gt;python&lt;&#x2F;a&gt; - provides lots of useful aliases to Python&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;robbyrussell&#x2F;oh-my-zsh&#x2F;tree&#x2F;master&#x2F;plugins&#x2F;sudo&quot;&gt;sudo&lt;&#x2F;a&gt; - hit ESC twice and boom! &lt;code&gt;sudo&lt;&#x2F;code&gt; will added to your command&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;robbyrussell&#x2F;oh-my-zsh&#x2F;tree&#x2F;master&#x2F;plugins&#x2F;web-search&quot;&gt;web-search&lt;&#x2F;a&gt; - simply opens up your browser with the search query of yours in desired search engine i.e &lt;code&gt;google whats the weather like today&lt;&#x2F;code&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;robbyrussell&#x2F;oh-my-zsh&#x2F;tree&#x2F;master&#x2F;plugins&#x2F;chucknorris&quot;&gt;chucknorris&lt;&#x2F;a&gt; - this plugin isn&#x27;t particularly meant for productivity but it can get really humorous.&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;robbyrussell&#x2F;oh-my-zsh&#x2F;tree&#x2F;master&#x2F;plugins&#x2F;ubuntu&quot;&gt;ubuntu&lt;&#x2F;a&gt; - this particular plugin provides lot of Ubuntu specific aliases to ease up the day-to-day work&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;Once put these all together this is how it looks&lt;&#x2F;p&gt;
&lt;img src=&quot;&#x2F;public&#x2F;images&#x2F;how_my_t_looks_01.gif&quot; alt=&quot;img&quot; class=&quot;inline&quot;&#x2F;&gt;
&lt;img src=&quot;&#x2F;public&#x2F;images&#x2F;how_my_t_looks_02.gif&quot; alt=&quot;img&quot; class=&quot;inline&quot;&#x2F;&gt;
</content>
        
    </entry>
    <entry xml:lang="en">
        <title>A simple word definition script</title>
        <published>2015-08-25T00:00:00+00:00</published>
        <updated>2015-08-25T00:00:00+00:00</updated>
        
        <author>
          <name>
            
              Unknown
            
          </name>
        </author>
        
        <link rel="alternate" type="text/html" href="https://noos.blog/posts/a-simple-word-definition-script/"/>
        <id>https://noos.blog/posts/a-simple-word-definition-script/</id>
        
        <content type="html" xml:base="https://noos.blog/posts/a-simple-word-definition-script/">&lt;p&gt;Have you ever come across a difficulty to find a definition of a word that you are looking for. Well I find it bit difficult for me.&lt;&#x2F;p&gt;
&lt;p&gt;I normally use Google search to find definitions of words. For example to get the definition of the word &quot;replenish&quot; I use &lt;a href=&quot;https:&#x2F;&#x2F;www.google.lk&#x2F;webhp?sourceid=chrome-instant&amp;amp;ion=1&amp;amp;espv=2&amp;amp;ie=UTF-8#q=definition%20replenish&quot;&gt;&lt;em&gt;definition replenish&lt;&#x2F;em&gt;&lt;&#x2F;a&gt; on search bar&lt;&#x2F;p&gt;
&lt;p&gt;But this approach is still bit clumsy though, since you need a browser and if you are already opened multiple tabs then it is sometimes get messy around to switch around tabs.&lt;&#x2F;p&gt;
&lt;p&gt;So I found out this simple script from the book &lt;a href=&quot;https:&#x2F;&#x2F;www.packtpub.com&#x2F;application-development&#x2F;linux-shell-scripting-cookbook-second-edition&quot;&gt;&lt;em&gt;Linux Shell Scripting Cookbook, 2nd Edition&lt;&#x2F;em&gt;&lt;&#x2F;a&gt; that will query your word and get the definition of it.&lt;&#x2F;p&gt;
&lt;p&gt;Let&#x27;s see how to get it to work (I have altered the original script from the book to make is more convenient)&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;First you need an account in &lt;em&gt;dictionaryapi.com&lt;&#x2F;em&gt; - &lt;a href=&quot;http:&#x2F;&#x2F;www.dictionaryapi.com&#x2F;register&#x2F;index.htm&quot;&gt;http:&#x2F;&#x2F;www.dictionaryapi.com&#x2F;register&#x2F;index.htm&lt;&#x2F;a&gt;
&lt;ul&gt;
&lt;li&gt;API key for the &lt;em&gt;learners&lt;&#x2F;em&gt; API would be enough for the time being&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;Get the script from &lt;a href=&quot;https:&#x2F;&#x2F;gist.github.com&#x2F;RockyRx&#x2F;1fe12ee85074e361836a&quot;&gt;here&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;Assign your API key to the variable &lt;strong&gt;apikey&lt;&#x2F;strong&gt;&lt;&#x2F;li&gt;
&lt;li&gt;Make it executable &lt;code&gt;chmod +x define&lt;&#x2F;code&gt;&lt;&#x2F;li&gt;
&lt;li&gt;Optional: if you want to make it available system wide add the script to &lt;code&gt;&#x2F;usr&#x2F;local&#x2F;bin&lt;&#x2F;code&gt;&lt;&#x2F;li&gt;
&lt;li&gt;Finally you can run it as &lt;code&gt;.&#x2F;define replenish&lt;&#x2F;code&gt;&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;The outcome would be:-
&lt;img src=&quot;&#x2F;public&#x2F;images&#x2F;define_script.png&quot; alt=&quot;img&quot; class=&quot;inline&quot;&#x2F;&gt;&lt;&#x2F;p&gt;
</content>
        
    </entry>
    <entry xml:lang="en">
        <title>Connecting Dots</title>
        <published>2013-09-15T00:00:00+00:00</published>
        <updated>2013-09-15T00:00:00+00:00</updated>
        
        <author>
          <name>
            
              Unknown
            
          </name>
        </author>
        
        <link rel="alternate" type="text/html" href="https://noos.blog/posts/connecting-dots/"/>
        <id>https://noos.blog/posts/connecting-dots/</id>
        
        <content type="html" xml:base="https://noos.blog/posts/connecting-dots/">&lt;p&gt;While I was fooling around the Play store I found this recently released nice, simple and very addictive game. It&#x27;s called the Dots. The funny thing about this game is that once you get started playing it you won&#x27;t feel bored even it just has to do the same thing over and over again.&lt;&#x2F;p&gt;
&lt;p&gt;The experience that I felt was somewhat different from other games I have played before (but this could be only me). I think the main psychological factor that keeps me in the game is its simplicity and the options you get to boost your score and the opportunity you get to use those options. So there should be also a bit of a planning involved.&lt;&#x2F;p&gt;
&lt;p&gt;Talking about the game basics there are two game mods &quot;Time mode&quot; and &quot;Moves mode&quot;. In time mode there&#x27;s a timer which runs for 60 seconds for a single round, so all your connecting skills should be used in this time frame. And in moves mode you&#x27;ll get 30 moves to scream at in a round. I usually go with the Time mode because it is fun and challenging.&lt;&#x2F;p&gt;
&lt;p&gt;Once you filled your bucket with enough earned dots you can go ahead and acquire one or more above mentioned options. They call these options as Power Ups.&lt;&#x2F;p&gt;
&lt;p&gt;Here I will list those Power Ups&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;Time Stops: With this Power Up you can hold off your timer for 5 seconds and it requires 1000 dots for 5 tryouts. It&#x27;s a pretty neat Power Up by the way. (In moves mode you&#x27;ll get extra five moves)&lt;&#x2F;li&gt;
&lt;li&gt;Shrinkers: This Power Up just shrinks any dot from the board. You just have to double tap on a dot. It requires 500 dots for five tryouts and can be used only once in a round.&lt;&#x2F;li&gt;
&lt;li&gt;Expanders: This Power Up I haven&#x27;t used yet. As described it removes all the same color dots. It requires 5000 dots for five tryouts. This Power Up will definitely come in handy.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;That&#x27;s pretty much it about this beautiful game. If you are bored or trying to eat up some free time this game will certainly do the job for you.&lt;&#x2F;p&gt;
&lt;p&gt;So here&#x27;s the Play store &lt;a href=&quot;https:&#x2F;&#x2F;play.google.com&#x2F;store&#x2F;apps&#x2F;details?id=com.nerdyoctopus.gamedots&quot;&gt;URL&lt;&#x2F;a&gt; give it a try&lt;&#x2F;p&gt;
&lt;p&gt;&lt;strong&gt;UPDATE&lt;&#x2F;strong&gt;&lt;&#x2F;p&gt;
&lt;p&gt;I noticed something new in the game&#x27;s About section. Actually it was already there but I wasn&#x27;t so curious to check it out.
There are few sections, most of them has quotes of wisdom by an admired person.  But one of them has this funny little dots of all colors and you can tap on them, which will eventually makes a unique sound for each dot.&lt;&#x2F;p&gt;
&lt;img src=&quot;&#x2F;public&#x2F;images&#x2F;dots_screenshot_2013-09-15-22-32-05.png&quot; alt=&quot;img&quot; class=&quot;inline&quot;&#x2F;&gt;
&lt;img src=&quot;&#x2F;public&#x2F;images&#x2F;dots_screenshot_2013-09-15-22-32-19.png&quot; alt=&quot;img&quot; class=&quot;inline&quot;&#x2F;&gt;
</content>
        
    </entry>
</feed>
